[INFO ] 2022-07-21T11:13:29,834Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/karthik/Infosys/corda/bootcamp-cordapp/workflows ... {}
[INFO ] 2022-07-21T11:13:29,944Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-07-21T11:13:30,586Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-07-21T11:13:31,000Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2022-07-21T11:13:31,006Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2022-07-21T11:13:31,007Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-07-21T11:13:31,311Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-07-21T11:13:31,322Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2022-07-21T11:13:31,552Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-07-21T11:13:31,553Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-07-21T11:13:31,553Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2022-07-21T11:13:31,639Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-07-21T11:13:31,639Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-07-21T11:13:31,938Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2022-07-21T11:13:32,219Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-07-21T11:13:32,231Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-07-21T11:13:32,244Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-07-21T11:13:32,244Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2022-07-21T11:13:32,244Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2022-07-21T11:13:32,654Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-07-21T11:13:32,654Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2022-07-21T11:13:32,679Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-07-21T11:13:32,679Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2022-07-21T11:13:32,738Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2022-07-21T11:13:32,738Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-07-21T11:13:32,810Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,822Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-07-21T11:13:32,858Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2022-07-21T11:13:32,882Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-07-21T11:13:32,882Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2022-07-21T11:13:32,882Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-07-21T11:13:32,894Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2022-07-21T11:13:32,894Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2022-07-21T11:13:32,905Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,905Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2022-07-21T11:13:32,905Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,917Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2022-07-21T11:13:32,917Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,917Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,917Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2022-07-21T11:13:32,927Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,927Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2022-07-21T11:13:32,953Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,953Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-07-21T11:13:32,953Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2022-07-21T11:13:32,976Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-07-21T11:13:32,976Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2022-07-21T11:13:32,976Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-07-21T11:13:32,976Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2022-07-21T11:13:32,976Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,987Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2022-07-21T11:13:32,999Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2022-07-21T11:13:33,012Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:33,012Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2022-07-21T11:13:34,349Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2022-07-21T11:13:34,362Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-07-21T11:13:34,362Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2022-07-21T11:13:34,362Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2022-07-21T11:13:34,364Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-07-21T11:13:34,372Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/karthik/Infosys/corda/bootcamp-cordapp/.gradle {}
[INFO ] 2022-07-21T11:13:34,373Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2022-07-21T11:13:34,395Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2022-07-21T11:13:36,969Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:36,975Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:36,982Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:37,029Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:37,530Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:37,762Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:37,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:37,795Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:37,797Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:37,849Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:37,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:28.238Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:40,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:40,609Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:40,611Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:41,993Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:42,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:42,209Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:42,209Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:42,326Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205) {}
[INFO ] 2022-07-21T11:13:42,359Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:42,373Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:42,373Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:42,393Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:42,393Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:42,453Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:42,457Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:42,748Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205) {}
[INFO ] 2022-07-21T11:13:42,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:42,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:42,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:42,755Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:42,759Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:42,759Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:42,759Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:42,764Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:42,793Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:42,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:42,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:42,816Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:42,816Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:42,821Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:28.238Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:43,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:43,220Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,220Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,315Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,320Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:43,322Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:43,322Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:43,326Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320) {}
[INFO ] 2022-07-21T11:13:43,334Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:43,334Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:43,334Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:43,342Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:43,342Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:43,523Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:43,537Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320) {}
[INFO ] 2022-07-21T11:13:43,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:43,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:43,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:43,547Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:43,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:43,562Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:43,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:43,563Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:43,565Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:43,566Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:43,566Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:43,571Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:43,585Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:43,585Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:43,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:43,604Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:43,604Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:43,607Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:43,608Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:28.238Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:43,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:43,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,838Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,943Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:43,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:43,951Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:43,951Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:43,956Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946) {}
[INFO ] 2022-07-21T11:13:43,959Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:43,960Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:43,960Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:43,964Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:43,964Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:43,977Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:43,989Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946) {}
[INFO ] 2022-07-21T11:13:43,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:43,990Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:43,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:43,997Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:44,005Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,012Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:44,012Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:44,017Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:44,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:44,017Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:44,020Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:44,020Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:44,020Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:44,024Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111329.184-5CDC7F0B932E7275/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:44,034Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:44,036Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:44,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:44,060Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:44,061Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:44,063Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:44,065Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:28.238Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:44,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:44,293Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:44,293Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:44,393Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:44,396Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:44,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,404Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396) {}
[INFO ] 2022-07-21T11:13:44,408Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:44,408Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:44,408Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:44,415Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,415Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:44,423Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:44,434Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396) {}
[INFO ] 2022-07-21T11:13:44,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402022205), owningKey=DLEQTmbw21oEDA1EAYBG2mExF2XsqqsJ99Thye5A2N31e6 {}
[INFO ] 2022-07-21T11:13:44,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,441Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,450Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402023320), owningKey=DLBES2it4yQjHYFonMfSG5BzMBigdCLfNSH2g5adN4r7zG {}
[INFO ] 2022-07-21T11:13:44,450Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,461Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402023946), owningKey=DLJ5QyqNQZpjyza2XuRkSW7c9FFnWBpADnQz4tDny68JAE {}
[INFO ] 2022-07-21T11:13:44,461Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:44,470Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,470Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:44,470Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402024396), owningKey=DL4iKJxyo9TNe4dshoqaYRvAxewUEN1oBEGNbKfr8inCR8 {}
[INFO ] 2022-07-21T11:13:44,470Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:44,588Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,600Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,600Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,601Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,714Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,717Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[INFO ] 2022-07-21T11:13:44,717Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[INFO ] 2022-07-21T11:13:44,722Z [Mock network] statemachine.StaffedFlowHospital. - Flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Invocation, sessionId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=118BA657165DC57A0616A64CD6186C17567F7567393AB157B10A8C7258E87836), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@4bd7ce78, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=8a4bd0d4-fbdf-4360-b02f-73fec6d92c1e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@47d530f9[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[INFO ] 2022-07-21T11:13:44,723Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:44,725Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:44,735Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] errored, dumping all transitions:

 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.578Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Invocation, sessionId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=118BA657165DC57A0616A64CD6186C17567F7567393AB157B10A8C7258E87836), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106])
    SignalFlowHasStarted(flowId=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106]
    []


 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.727Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:44.549Z
    2022-07-21T11:13:44.719Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5505505599683842626, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.731Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:44.719Z
    2022-07-21T11:13:44.731Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,735Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:44,736Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:44,757Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] errored, dumping all transitions:

 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.578Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Invocation, sessionId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=118BA657165DC57A0616A64CD6186C17567F7567393AB157B10A8C7258E87836), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106])
    SignalFlowHasStarted(flowId=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@55347106]
    []


 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.727Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:44.549Z
    2022-07-21T11:13:44.719Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5505505599683842626, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.731Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:44.719Z
    2022-07-21T11:13:44.731Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] ---
  Timestamp: 2022-07-21T11:13:44.754Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268, errorId=5505505599683842626)], sessions=[], senderUUID=8a4bd0d4-fbdf-4360-b02f-73fec6d92c1e)
    CreateTransaction
    RemoveCheckpoint(id=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=415947d7-fa6d-4945-93a5-2cfaffe1fe0f)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[415947d7-fa6d-4945-93a5-2cfaffe1fe0f], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=5505505599683842626, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Invocation, sessionId=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, timestamp: 2022-07-21T11:13:44.494Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=5505505599683842626, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@4bd7ce78, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=8a4bd0d4-fbdf-4360-b02f-73fec6d92c1e, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@47d530f9[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2022-07-21T11:13:44.731Z
    2022-07-21T11:13:44.735Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=118BA657165DC57A0616A64CD6186C17567F7567393AB157B10A8C7258E87836)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
[WARN ] 2022-07-21T11:13:44,757Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [415947d7-fa6d-4945-93a5-2cfaffe1fe0f] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=415947d7-fa6d-4945-93a5-2cfaffe1fe0f, invocation_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, invocation_timestamp=2022-07-21T11:13:44.494Z, origin=Only For Testing, session_id=5440ce5a-656b-4b34-a0e3-c2eaf10b1f54, session_timestamp=2022-07-21T11:13:44.494Z, thread-id=313}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 80D1CE583157D0BAF8EA21A7FD1BA0964C041F4EE1E9ACB36F5F735C396F7268
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:44,786Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2022-07-21T11:13:44,806Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:44,806Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:44,809Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2022-07-21T11:13:44,822Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:44,822Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:44,823Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2022-07-21T11:13:44,829Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:44,829Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:44,838Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2022-07-21T11:13:44,851Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:44,851Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:44,962Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:44,962Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:44,962Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:44,977Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:45,013Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:45,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:45,014Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:45,016Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:45,016Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:45,018Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:45,020Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:44.860Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:45,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:45,289Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:45,289Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:45,412Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:45,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:45,417Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:45,417Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:45,426Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415) {}
[INFO ] 2022-07-21T11:13:45,432Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:45,434Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:45,434Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:45,439Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:45,439Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,454Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:45,455Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:45,462Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415) {}
[INFO ] 2022-07-21T11:13:45,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:45,462Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:45,463Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,466Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:45,466Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:45,466Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:45,495Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:45,506Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:45,506Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:45,506Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:45,520Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:45,520Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:45,522Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:45,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:44.860Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:45,689Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:45,690Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:45,690Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:45,777Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:45,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:45,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:45,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:45,785Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781) {}
[INFO ] 2022-07-21T11:13:45,788Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:45,788Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:45,788Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:45,794Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:45,794Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,803Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:45,812Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781) {}
[INFO ] 2022-07-21T11:13:45,813Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:45,813Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:45,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:45,818Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:45,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:45,823Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:45,823Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:45,825Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:45,826Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:45,826Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:45,830Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:45,849Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:45,850Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:45,850Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:45,862Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:45,862Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:45,864Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:45,866Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:44.860Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:46,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:46,011Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,011Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,160Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:46,164Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,164Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,168Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162) {}
[INFO ] 2022-07-21T11:13:46,171Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:46,171Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:46,171Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:46,178Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,178Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:46,194Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:46,203Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162) {}
[INFO ] 2022-07-21T11:13:46,204Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:46,204Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:46,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,222Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,229Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,229Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:46,229Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,229Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:46,234Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:46,234Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:46,234Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:46,237Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111344.860-69FC5749AB5B38BC/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:46,248Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,249Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:46,250Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:46,265Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:46,265Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:46,267Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:46,268Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:44.860Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:46,419Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:46,420Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,420Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,539Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:46,542Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:46,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,543Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,545Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542) {}
[INFO ] 2022-07-21T11:13:46,549Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:46,549Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:46,549Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:46,556Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,556Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:46,562Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:46,570Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542) {}
[INFO ] 2022-07-21T11:13:46,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402025415), owningKey=DLCXuNnp4RZHEsrSrWpjGQUZgfnWWxdCBTbruN6kuyuJJ9 {}
[INFO ] 2022-07-21T11:13:46,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,576Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,580Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402025781), owningKey=DLJ7cbSayisPnoSHE6PSmpZPPBmVR1ynoGvPd6NuAiBCfs {}
[INFO ] 2022-07-21T11:13:46,580Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,584Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402026162), owningKey=DL6z8zhPWHssQY3HLuTUqFfmGmZLXBBnoCAcuoiVjhmbPd {}
[INFO ] 2022-07-21T11:13:46,588Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,593Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,593Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:46,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:46,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402026542), owningKey=DLCoXtLRCWZqZTewhsNJQCh5wym5P3BsUfq5GH5K352mCR {}
[INFO ] 2022-07-21T11:13:46,597Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:46,604Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[WARN ] 2022-07-21T11:13:46,606Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[WARN ] 2022-07-21T11:13:46,643Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[WARN ] 2022-07-21T11:13:46,645Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[INFO ] 2022-07-21T11:13:46,645Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[INFO ] 2022-07-21T11:13:46,646Z [Mock network] statemachine.StaffedFlowHospital. - Flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Invocation, sessionId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=793C3F455407D3610A5D8B214F46F65E3ADD988158B55D646ABCA60B10904F5B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@20af4f31, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=d4dd6d80-0500-4079-a682-751889e51815, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@76ecbc51[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[INFO ] 2022-07-21T11:13:46,646Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:46,646Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:46,648Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] errored, dumping all transitions:

 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.604Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Invocation, sessionId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=793C3F455407D3610A5D8B214F46F65E3ADD988158B55D646ABCA60B10904F5B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe])
    SignalFlowHasStarted(flowId=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe]
    []


 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.646Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:46.599Z
    2022-07-21T11:13:46.645Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3651266494262745048, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.646Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.647Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:46.645Z
    2022-07-21T11:13:46.647Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[WARN ] 2022-07-21T11:13:46,648Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:46,648Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:46,655Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] errored, dumping all transitions:

 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.604Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Invocation, sessionId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=793C3F455407D3610A5D8B214F46F65E3ADD988158B55D646ABCA60B10904F5B), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe])
    SignalFlowHasStarted(flowId=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@396aa8fe]
    []


 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.646Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:46.599Z
    2022-07-21T11:13:46.645Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3651266494262745048, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.646Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.647Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:46.645Z
    2022-07-21T11:13:46.647Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] ---
  Timestamp: 2022-07-21T11:13:46.653Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA, errorId=-3651266494262745048)], sessions=[], senderUUID=d4dd6d80-0500-4079-a682-751889e51815)
    CreateTransaction
    RemoveCheckpoint(id=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[bb1e6a6c-33cd-427b-b0b5-1eaabd41029a], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-3651266494262745048, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Invocation, sessionId=5ce78be3-eee8-41bd-b9e4-0599231e65f3, timestamp: 2022-07-21T11:13:46.598Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=-3651266494262745048, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@20af4f31, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=d4dd6d80-0500-4079-a682-751889e51815, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@76ecbc51[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2022-07-21T11:13:46.647Z
    2022-07-21T11:13:46.648Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=793C3F455407D3610A5D8B214F46F65E3ADD988158B55D646ABCA60B10904F5B)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
[WARN ] 2022-07-21T11:13:46,655Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [bb1e6a6c-33cd-427b-b0b5-1eaabd41029a] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bb1e6a6c-33cd-427b-b0b5-1eaabd41029a, invocation_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, invocation_timestamp=2022-07-21T11:13:46.598Z, origin=Only For Testing, session_id=5ce78be3-eee8-41bd-b9e4-0599231e65f3, session_timestamp=2022-07-21T11:13:46.598Z, thread-id=596}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 98862D99F949144334CC240CB77967F7B5D0F8A7E2C2A4F38ED2750D258101CA
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:46,666Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2022-07-21T11:13:46,680Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:46,680Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,683Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2022-07-21T11:13:46,693Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:46,693Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,694Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2022-07-21T11:13:46,701Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:46,701Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,703Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2022-07-21T11:13:46,708Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:46,708Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,776Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:46,777Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:46,777Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:46,782Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:46,799Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:46,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:46,801Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:46,803Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:46,803Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:46,807Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:46,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:46.709Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:47,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:47,014Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:47,014Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:47,095Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:47,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:47,098Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,098Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,114Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097) {}
[INFO ] 2022-07-21T11:13:47,119Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:47,119Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:47,119Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:47,125Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,125Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,146Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:47,148Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:47,159Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097) {}
[INFO ] 2022-07-21T11:13:47,159Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,159Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,159Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,159Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,162Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:47,162Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:47,162Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,167Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,185Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:47,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:47,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:47,200Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:47,200Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:47,203Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:47,204Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:46.709Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:47,409Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:47,413Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,413Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,506Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:47,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,520Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509) {}
[INFO ] 2022-07-21T11:13:47,523Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:47,523Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:47,523Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:47,527Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,527Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,537Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:47,543Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509) {}
[INFO ] 2022-07-21T11:13:47,544Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,544Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,548Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,552Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,552Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,552Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,552Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,555Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:47,555Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:47,555Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,559Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,570Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:47,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:47,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:47,583Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:47,583Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:47,585Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:47,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:46.709Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:47,737Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:47,739Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,739Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,806Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:47,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:47,834Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,834Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,836Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833) {}
[INFO ] 2022-07-21T11:13:47,839Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:47,839Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:47,839Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:47,843Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,843Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,855Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:47,862Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833) {}
[INFO ] 2022-07-21T11:13:47,863Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:47,863Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,868Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,868Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:47,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,874Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,874Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:47,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,878Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:47,878Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:47,881Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:47,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:47,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,884Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111346.710-5E071F09142BAA4A/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:47,894Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:47,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:47,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:47,909Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:47,909Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:47,912Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:47,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:46.709Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:48,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:48,052Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,052Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,157Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,159Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:48,160Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,160Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,162Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159) {}
[INFO ] 2022-07-21T11:13:48,164Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:48,165Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:48,165Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:48,172Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,172Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,231Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:48,238Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159) {}
[INFO ] 2022-07-21T11:13:48,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402027097), owningKey=DLDBJ7XbQF96ehuiAQUsjFKucjdtW3Zyw6G9hvn1eA6Evp {}
[INFO ] 2022-07-21T11:13:48,240Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,243Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,243Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,246Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402027509), owningKey=DLGfKsWBnWjjnisUCWx4vTn4BtJbkuNU8Y2ohfLoZCBW4w {}
[INFO ] 2022-07-21T11:13:48,246Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,249Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,249Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,255Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402027833), owningKey=DLCstRPVxFGkYM93bKiJtymEgSWDC8nzhVPp6JnwL4qZYC {}
[INFO ] 2022-07-21T11:13:48,255Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,258Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,260Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,260Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,260Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402028159), owningKey=DLH5SseB7ZGkBT67DMYyaKJcNX1zxmZXLN2xEAq2BWiStt {}
[INFO ] 2022-07-21T11:13:48,260Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:48,268Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[WARN ] 2022-07-21T11:13:48,270Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[WARN ] 2022-07-21T11:13:48,301Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[WARN ] 2022-07-21T11:13:48,303Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[INFO ] 2022-07-21T11:13:48,304Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[INFO ] 2022-07-21T11:13:48,304Z [Mock network] statemachine.StaffedFlowHospital. - Flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Invocation, sessionId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=812CB9FDA4EC15515E48AFFDE7665166A8FF5F0F388A74044FFB375543B349D4), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@41d1f5ec, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=c6cdefaf-b57f-4f77-a092-c2d035547ea2, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@58643bb[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[INFO ] 2022-07-21T11:13:48,305Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:48,305Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:48,306Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] errored, dumping all transitions:

 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Invocation, sessionId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=812CB9FDA4EC15515E48AFFDE7665166A8FF5F0F388A74044FFB375543B349D4), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63])
    SignalFlowHasStarted(flowId=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63]
    []


 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:48.263Z
    2022-07-21T11:13:48.304Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7862403610403580548, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:48.304Z
    2022-07-21T11:13:48.305Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[WARN ] 2022-07-21T11:13:48,306Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:48,306Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:48,318Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] errored, dumping all transitions:

 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.268Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Invocation, sessionId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=812CB9FDA4EC15515E48AFFDE7665166A8FF5F0F388A74044FFB375543B349D4), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63])
    SignalFlowHasStarted(flowId=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@47d1b63]
    []


 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:48.263Z
    2022-07-21T11:13:48.304Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7862403610403580548, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.305Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:48.304Z
    2022-07-21T11:13:48.305Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] ---
  Timestamp: 2022-07-21T11:13:48.316Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4, errorId=7862403610403580548)], sessions=[], senderUUID=c6cdefaf-b57f-4f77-a092-c2d035547ea2)
    CreateTransaction
    RemoveCheckpoint(id=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7862403610403580548, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Invocation, sessionId=7c291412-cb72-4d6d-9f34-f913b9134b51, timestamp: 2022-07-21T11:13:48.262Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=7862403610403580548, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@41d1f5ec, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=c6cdefaf-b57f-4f77-a092-c2d035547ea2, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@58643bb[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2022-07-21T11:13:48.305Z
    2022-07-21T11:13:48.306Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=812CB9FDA4EC15515E48AFFDE7665166A8FF5F0F388A74044FFB375543B349D4)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
[WARN ] 2022-07-21T11:13:48,318Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=2748b9fc-9b5f-4018-bdc7-f9e4d9ee451e, invocation_id=7c291412-cb72-4d6d-9f34-f913b9134b51, invocation_timestamp=2022-07-21T11:13:48.262Z, origin=Only For Testing, session_id=7c291412-cb72-4d6d-9f34-f913b9134b51, session_timestamp=2022-07-21T11:13:48.262Z, thread-id=878}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 2234D256F54C7239E45A4593373EAE913886ED6F93E2FEB08B7C037A71CBC4D4
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:48,324Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2022-07-21T11:13:48,344Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:48,344Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,358Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2022-07-21T11:13:48,365Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:48,365Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,367Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2022-07-21T11:13:48,371Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:48,371Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,372Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2022-07-21T11:13:48,377Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:48,377Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,435Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:48,435Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:48,435Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:48,439Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:48,450Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:48,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:48,454Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:48,454Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:48,456Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:48,460Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:48.378Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:48,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:48,622Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:48,622Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:48,681Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:48,683Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:48,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:48,685Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,692Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683) {}
[INFO ] 2022-07-21T11:13:48,698Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:48,699Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:48,699Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:48,704Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:48,704Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,716Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:48,717Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:48,725Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683) {}
[INFO ] 2022-07-21T11:13:48,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:48,725Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:48,725Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,728Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:48,728Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:48,728Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:48,733Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:48,748Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:48,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:48,750Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:48,760Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:48,760Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:48,763Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:48,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:48.378Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:48,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:48,886Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,886Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,935Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:48,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:48,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:48,938Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,940Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937) {}
[INFO ] 2022-07-21T11:13:48,942Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:48,945Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:48,945Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:48,971Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:48,971Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,973Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:48,987Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937) {}
[INFO ] 2022-07-21T11:13:48,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:48,990Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:48,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:48,998Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:48,998Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:48,998Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:48,998Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,000Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:49,000Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:49,001Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,006Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,015Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:49,016Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:49,026Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:49,027Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:49,034Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:49,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:48.378Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:49,173Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:49,174Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,174Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,223Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,225Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:49,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,226Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,331Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225) {}
[INFO ] 2022-07-21T11:13:49,333Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:49,334Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:49,334Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:49,338Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,338Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,345Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:49,352Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225) {}
[INFO ] 2022-07-21T11:13:49,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:49,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,358Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,362Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:49,362Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,366Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,366Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,370Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,370Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,372Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:49,372Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:49,372Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,377Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111348.379-B768D932AF373DEF/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,386Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:49,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:49,398Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:49,398Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:49,401Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:49,401Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:48.378Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:49,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:49,550Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,550Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,605Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:49,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:49,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,608Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,610Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607) {}
[INFO ] 2022-07-21T11:13:49,612Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:49,612Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:49,612Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:49,615Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,615Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,623Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:49,632Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607) {}
[INFO ] 2022-07-21T11:13:49,632Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402028683), owningKey=DL98A9181NXY1psub36LNxfE1SumTYNK61UxGrsrKZfzHQ {}
[INFO ] 2022-07-21T11:13:49,632Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,638Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,638Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,642Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402028937), owningKey=DL4tWkKtJPuW87QojdVFU5zGbBGqmvihM51TRFadjyr2GD {}
[INFO ] 2022-07-21T11:13:49,642Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,645Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,648Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402029225), owningKey=DL8QxLQpXneFED3JsU2oimKoNzxpD3Mi6NSH7GyudoksYW {}
[INFO ] 2022-07-21T11:13:49,648Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,651Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,651Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,654Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,654Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:49,654Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402029607), owningKey=DLp8npo9Lp52U8xQiP8EcPDxhMgt7PJC1epwaoihDfgz6 {}
[INFO ] 2022-07-21T11:13:49,654Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:49,657Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[WARN ] 2022-07-21T11:13:49,659Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[WARN ] 2022-07-21T11:13:49,673Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[WARN ] 2022-07-21T11:13:49,674Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[INFO ] 2022-07-21T11:13:49,674Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[INFO ] 2022-07-21T11:13:49,674Z [Mock network] statemachine.StaffedFlowHospital. - Flow [53299353-809a-43dd-997f-6c8628cddca7] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Invocation, sessionId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BAA0E581127D49BF65D7D6D632DA8FE737D0E3BF81F57EFFC7DAE6F5333BC3E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@139a4f71, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=e2b0f563-cbfc-4f46-a817-0e50f8139efd, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@5ce5f635[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[INFO ] 2022-07-21T11:13:49,674Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:49,675Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:49,675Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53299353-809a-43dd-997f-6c8628cddca7] errored, dumping all transitions:

 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.657Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[53299353-809a-43dd-997f-6c8628cddca7], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Invocation, sessionId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BAA0E581127D49BF65D7D6D632DA8FE737D0E3BF81F57EFFC7DAE6F5333BC3E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31])
    SignalFlowHasStarted(flowId=[53299353-809a-43dd-997f-6c8628cddca7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31]
    []


 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:49.655Z
    2022-07-21T11:13:49.674Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8436340041346724379, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:49.674Z
    2022-07-21T11:13:49.675Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[WARN ] 2022-07-21T11:13:49,675Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53299353-809a-43dd-997f-6c8628cddca7] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:49,675Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:49,680Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53299353-809a-43dd-997f-6c8628cddca7] errored, dumping all transitions:

 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.657Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[53299353-809a-43dd-997f-6c8628cddca7], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Invocation, sessionId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=6BAA0E581127D49BF65D7D6D632DA8FE737D0E3BF81F57EFFC7DAE6F5333BC3E), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31])
    SignalFlowHasStarted(flowId=[53299353-809a-43dd-997f-6c8628cddca7])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@31e3ae31]
    []


 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:49.655Z
    2022-07-21T11:13:49.674Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8436340041346724379, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.675Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:49.674Z
    2022-07-21T11:13:49.675Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [53299353-809a-43dd-997f-6c8628cddca7] ---
  Timestamp: 2022-07-21T11:13:49.679Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495, errorId=8436340041346724379)], sessions=[], senderUUID=e2b0f563-cbfc-4f46-a817-0e50f8139efd)
    CreateTransaction
    RemoveCheckpoint(id=[53299353-809a-43dd-997f-6c8628cddca7], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=53299353-809a-43dd-997f-6c8628cddca7)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[53299353-809a-43dd-997f-6c8628cddca7], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=8436340041346724379, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Invocation, sessionId=0a2da900-27d4-493f-94b8-74a3ce65f5a9, timestamp: 2022-07-21T11:13:49.655Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=8436340041346724379, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@139a4f71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=e2b0f563-cbfc-4f46-a817-0e50f8139efd, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@5ce5f635[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=6BAA0E581127D49BF65D7D6D632DA8FE737D0E3BF81F57EFFC7DAE6F5333BC3E)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
[WARN ] 2022-07-21T11:13:49,680Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [53299353-809a-43dd-997f-6c8628cddca7] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=53299353-809a-43dd-997f-6c8628cddca7, invocation_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, invocation_timestamp=2022-07-21T11:13:49.655Z, origin=Only For Testing, session_id=0a2da900-27d4-493f-94b8-74a3ce65f5a9, session_timestamp=2022-07-21T11:13:49.655Z, thread-id=1157}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: BDD2DC74852F6BB95A04D4D2ECAF7889A433BD7A1150B19C6ED07D7C650BF495
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:49,683Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2022-07-21T11:13:49,689Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:49,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,689Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2022-07-21T11:13:49,693Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:49,693Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,694Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2022-07-21T11:13:49,697Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:49,697Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,698Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2022-07-21T11:13:49,700Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:49,700Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,748Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:49,748Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:49,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,752Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:49,760Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:49,761Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:49,762Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:49,765Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:49,765Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:49,768Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:49,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:49.701Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:49,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:49,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:49,932Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:49,985Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:49,987Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:49,987Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:49,987Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:49,997Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987) {}
[INFO ] 2022-07-21T11:13:50,001Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:50,002Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:50,002Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:50,008Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,008Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,025Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:50,027Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:50,034Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987) {}
[INFO ] 2022-07-21T11:13:50,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,034Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,034Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,038Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:50,038Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:50,038Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,044Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,054Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:50,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:50,066Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:50,066Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:50,068Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:50,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:49.701Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:50,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:50,199Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,199Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,238Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,240Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:50,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,241Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,243Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240) {}
[INFO ] 2022-07-21T11:13:50,245Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:50,245Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:50,245Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:50,250Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,250Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,261Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:50,267Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240) {}
[INFO ] 2022-07-21T11:13:50,267Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,267Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,271Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,271Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,274Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,274Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,277Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:50,277Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:50,277Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,289Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,290Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:50,290Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:50,301Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:50,301Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:50,303Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:50,304Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:49.701Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:50,421Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:50,422Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,422Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,469Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,471Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:50,472Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,474Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471) {}
[INFO ] 2022-07-21T11:13:50,476Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:50,477Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:50,477Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:50,480Z [MockNode-19-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,480Z [MockNode-19-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,488Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:50,494Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471) {}
[INFO ] 2022-07-21T11:13:50,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,494Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,499Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,505Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,505Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,507Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,507Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,509Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:50,510Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:50,510Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,512Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111349.701-BAB2ECA7762B9512/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,520Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:50,521Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:50,533Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:50,533Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:50,535Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:50,536Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:49.701Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:50,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:50,705Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,705Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,752Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:50,754Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:50,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,755Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,757Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754) {}
[INFO ] 2022-07-21T11:13:50,760Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:50,760Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:50,760Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:50,766Z [MockNode-20-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,766Z [MockNode-20-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,775Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:50,783Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754) {}
[INFO ] 2022-07-21T11:13:50,784Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402029987), owningKey=DLAoc31YPbXFx7QVHyMTSpWGLTShjXCG5r8e1gGaLyhxaM {}
[INFO ] 2022-07-21T11:13:50,784Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,788Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,791Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402030240), owningKey=DL6r9QyJthcf4CxA4bYjGvAkamvaJLyLuvnjr5QMR2PEMS {}
[INFO ] 2022-07-21T11:13:50,791Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,794Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402030471), owningKey=DL9DLNwbjsX3etxnKmqZ6is4MpMfaHydXEP46th6gE5f2e {}
[INFO ] 2022-07-21T11:13:50,798Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,802Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,802Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:50,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,805Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:50,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402030754), owningKey=DLGzdWtWsSnzXrnLjgvF1eNDwDka3QPEVnCCJa4rieTN6B {}
[INFO ] 2022-07-21T11:13:50,805Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:50,809Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[WARN ] 2022-07-21T11:13:50,810Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[WARN ] 2022-07-21T11:13:50,833Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[WARN ] 2022-07-21T11:13:50,834Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[INFO ] 2022-07-21T11:13:50,834Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[INFO ] 2022-07-21T11:13:50,834Z [Mock network] statemachine.StaffedFlowHospital. - Flow [64b842b3-c7df-4659-9847-479a09f1185d] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Invocation, sessionId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=A5DE05F7B6BCBFF3DAB94C8B4933D1C7B6D2816F8A5A3A954DB8A7E128581EE9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@2484721e, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=65426a86-0d39-4bb1-9250-0adb890c366d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@2e4b507a[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[INFO ] 2022-07-21T11:13:50,834Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:50,834Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:50,834Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [64b842b3-c7df-4659-9847-479a09f1185d] errored, dumping all transitions:

 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.809Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[64b842b3-c7df-4659-9847-479a09f1185d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Invocation, sessionId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=A5DE05F7B6BCBFF3DAB94C8B4933D1C7B6D2816F8A5A3A954DB8A7E128581EE9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b])
    SignalFlowHasStarted(flowId=[64b842b3-c7df-4659-9847-479a09f1185d])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b]
    []


 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:50.807Z
    2022-07-21T11:13:50.834Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7423793889915821376, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[WARN ] 2022-07-21T11:13:50,834Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [64b842b3-c7df-4659-9847-479a09f1185d] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:50,835Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:50,841Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [64b842b3-c7df-4659-9847-479a09f1185d] errored, dumping all transitions:

 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.809Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[64b842b3-c7df-4659-9847-479a09f1185d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Invocation, sessionId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=A5DE05F7B6BCBFF3DAB94C8B4933D1C7B6D2816F8A5A3A954DB8A7E128581EE9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b])
    SignalFlowHasStarted(flowId=[64b842b3-c7df-4659-9847-479a09f1185d])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@5557a77b]
    []


 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:50.807Z
    2022-07-21T11:13:50.834Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7423793889915821376, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.834Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [64b842b3-c7df-4659-9847-479a09f1185d] ---
  Timestamp: 2022-07-21T11:13:50.840Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6, errorId=7423793889915821376)], sessions=[], senderUUID=65426a86-0d39-4bb1-9250-0adb890c366d)
    CreateTransaction
    RemoveCheckpoint(id=[64b842b3-c7df-4659-9847-479a09f1185d], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=64b842b3-c7df-4659-9847-479a09f1185d)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[64b842b3-c7df-4659-9847-479a09f1185d], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7423793889915821376, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Invocation, sessionId=fd234dd8-dd62-4355-bbfa-bea384efd89f, timestamp: 2022-07-21T11:13:50.806Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=7423793889915821376, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@2484721e, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=65426a86-0d39-4bb1-9250-0adb890c366d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@2e4b507a[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2022-07-21T11:13:50.834Z
    2022-07-21T11:13:50.835Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=A5DE05F7B6BCBFF3DAB94C8B4933D1C7B6D2816F8A5A3A954DB8A7E128581EE9)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
[WARN ] 2022-07-21T11:13:50,841Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [64b842b3-c7df-4659-9847-479a09f1185d] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=64b842b3-c7df-4659-9847-479a09f1185d, invocation_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, invocation_timestamp=2022-07-21T11:13:50.806Z, origin=Only For Testing, session_id=fd234dd8-dd62-4355-bbfa-bea384efd89f, session_timestamp=2022-07-21T11:13:50.806Z, thread-id=1436}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: D75C942E07B23F7129D4BA4C0E817DBF0C73EBD19816A884E452B8B88A9D83E6
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:50,844Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2022-07-21T11:13:50,850Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:50,850Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,851Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2022-07-21T11:13:50,854Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:50,854Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,854Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-19) {}
[INFO ] 2022-07-21T11:13:50,857Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:50,857Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,858Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-20) {}
[INFO ] 2022-07-21T11:13:50,861Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:50,861Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,892Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/0/cordapps] {}
[INFO ] 2022-07-21T11:13:50,892Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:50,892Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,895Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:50,902Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:50,902Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:50,903Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:50,904Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:50,904Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:50,906Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:50,908Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:50.861Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:51,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:51,059Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:51,059Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:51,105Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2022-07-21T11:13:51,107Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:51,108Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,108Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,115Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107) {}
[INFO ] 2022-07-21T11:13:51,118Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:51,119Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:51,119Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:51,122Z [MockNode-21-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,122Z [MockNode-21-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,136Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:51,137Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2022-07-21T11:13:51,142Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107) {}
[INFO ] 2022-07-21T11:13:51,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,142Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,142Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,145Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/1/cordapps] {}
[INFO ] 2022-07-21T11:13:51,145Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:51,145Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,147Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,154Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:51,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:51,164Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:51,164Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:51,168Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:51,169Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:50.861Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:51,282Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:51,283Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,283Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,328Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:51,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,331Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,333Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330) {}
[INFO ] 2022-07-21T11:13:51,335Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:51,335Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:51,335Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:51,338Z [MockNode-22-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,338Z [MockNode-22-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,346Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:51,352Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330) {}
[INFO ] 2022-07-21T11:13:51,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,352Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,356Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,361Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/2/cordapps] {}
[INFO ] 2022-07-21T11:13:51,361Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:51,361Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,364Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,376Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:51,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:51,387Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:51,387Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:51,389Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:51,390Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:50.861Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:51,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:51,527Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,527Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,582Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,585Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:51,586Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,586Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,589Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585) {}
[INFO ] 2022-07-21T11:13:51,594Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:51,594Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:51,594Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:51,598Z [MockNode-23-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,598Z [MockNode-23-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,607Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:51,614Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585) {}
[INFO ] 2022-07-21T11:13:51,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,614Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,618Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,622Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,622Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,626Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,628Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,628Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,631Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/3/cordapps] {}
[INFO ] 2022-07-21T11:13:51,631Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2022-07-21T11:13:51,631Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,635Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/karthik/Infosys/corda/bootcamp-cordapp/workflows/build/mock-network/20220721-111350.861-41B6728208375B7D/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2022-07-21T11:13:51,651Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,652Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2022-07-21T11:13:51,653Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2022-07-21T11:13:51,667Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2022-07-21T11:13:51,667Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP, alias: identity-private-key {}
[INFO ] 2022-07-21T11:13:51,669Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator to initiate com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowResponder (version 1) {}
[INFO ] 2022-07-21T11:13:51,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2022-07-21T11:13:50.861Z
      epoch=1
  } {}
[INFO ] 2022-07-21T11:13:51,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2022-07-21T11:13:51,792Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,792Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,834Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2022-07-21T11:13:51,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2022-07-21T11:13:51,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,841Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836) {}
[INFO ] 2022-07-21T11:13:51,843Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2022-07-21T11:13:51,843Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2022-07-21T11:13:51,843Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2022-07-21T11:13:51,847Z [MockNode-24-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,847Z [MockNode-24-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,858Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=03E4767F571BB5866BAEF38DD64F715CCB37B71937489FAC39DE6A23B4EB58BA uploader=app filename=Bootcamp Contracts {}
[INFO ] 2022-07-21T11:13:51,865Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836) {}
[INFO ] 2022-07-21T11:13:51,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=10, serial=1658402031107), owningKey=DL59s7tFCMNCN4KZwKx9RqvT5q4zmnTipccg1KFk3VMw3v {}
[INFO ] 2022-07-21T11:13:51,867Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,873Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,873Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=10, serial=1658402031330), owningKey=DLGvtP28RJNS6TRwQWif6rdvLvbpfwtWD38kcB7JfpZ39j {}
[INFO ] 2022-07-21T11:13:51,879Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,885Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,885Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1658402031585), owningKey=DLADf2HDFM8cx6WimB1JHEQA4Zp1jrLe5KZQEaCjj3cTRD {}
[INFO ] 2022-07-21T11:13:51,890Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,895Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2022-07-21T11:13:51,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,898Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2022-07-21T11:13:51,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=10, serial=1658402031836), owningKey=DLDPP5kUGA5WEsN6b7cMqGuqvFTAHusMhz3xsQLgsNiAWP {}
[INFO ] 2022-07-21T11:13:51,898Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2022-07-21T11:13:51,903Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[WARN ] 2022-07-21T11:13:51,904Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[WARN ] 2022-07-21T11:13:51,924Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[WARN ] 2022-07-21T11:13:51,925Z [Mock network] contracts.TransactionState. - State class com.bootcamp.states.TokenState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Annotate TokenState with @BelongsToContract(com.bootcamp.contracts.TokenContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[INFO ] 2022-07-21T11:13:51,925Z [Mock network] corda.flow. - Flow raised an error: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[INFO ] 2022-07-21T11:13:51,927Z [Mock network] statemachine.StaffedFlowHospital. - Flow [96c9b024-3979-4d8b-abea-673c55400b16] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Invocation, sessionId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3C42B35C8284D2EBFE2667E05E80A413BD686666AED71E2FD6DCD06BB95A30D9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@b77df36, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=87acbe77-e57f-4f58-bb28-9156fe494047, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@648927c2[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[INFO ] 2022-07-21T11:13:51,927Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:51,927Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:51,928Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [96c9b024-3979-4d8b-abea-673c55400b16] errored, dumping all transitions:

 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.902Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[96c9b024-3979-4d8b-abea-673c55400b16], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Invocation, sessionId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3C42B35C8284D2EBFE2667E05E80A413BD686666AED71E2FD6DCD06BB95A30D9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5])
    SignalFlowHasStarted(flowId=[96c9b024-3979-4d8b-abea-673c55400b16])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5]
    []


 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:51.900Z
    2022-07-21T11:13:51.926Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=6772733517801448267, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:51.926Z
    2022-07-21T11:13:51.927Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[WARN ] 2022-07-21T11:13:51,928Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [96c9b024-3979-4d8b-abea-673c55400b16] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:51,928Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[WARN ] 2022-07-21T11:13:51,932Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [96c9b024-3979-4d8b-abea-673c55400b16] errored, dumping all transitions:

 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.902Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[96c9b024-3979-4d8b-abea-673c55400b16], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Invocation, sessionId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=3C42B35C8284D2EBFE2667E05E80A413BD686666AED71E2FD6DCD06BB95A30D9), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5])
    SignalFlowHasStarted(flowId=[96c9b024-3979-4d8b-abea-673c55400b16])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@44d005f5]
    []


 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:51.900Z
    2022-07-21T11:13:51.926Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=6772733517801448267, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.927Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2022-07-21T11:13:51.926Z
    2022-07-21T11:13:51.927Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [96c9b024-3979-4d8b-abea-673c55400b16] ---
  Timestamp: 2022-07-21T11:13:51.931Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A, errorId=6772733517801448267)], sessions=[], senderUUID=87acbe77-e57f-4f58-bb28-9156fe494047)
    CreateTransaction
    RemoveCheckpoint(id=[96c9b024-3979-4d8b-abea-673c55400b16], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=96c9b024-3979-4d8b-abea-673c55400b16)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[96c9b024-3979-4d8b-abea-673c55400b16], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=6772733517801448267, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Invocation, sessionId=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, timestamp: 2022-07-21T11:13:51.899Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, classToInitiateWith=class com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=workflows-0.1, corDappHash=D3DCCD79027A63440EDD5480255DAA4F4D249B9641018D070F4A195DADE84A6C), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f, errorState=Errored(errors=[FlowError(errorId=6772733517801448267, exception=net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator@b77df36, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=87acbe77-e57f-4f58-bb28-9156fe494047, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@648927c2[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
checkpoint.timestamp: 
    2022-07-21T11:13:51.927Z
    2022-07-21T11:13:51.928Z
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=3C42B35C8284D2EBFE2667E05E80A413BD686666AED71E2FD6DCD06BB95A30D9)
    net.corda.node.services.statemachine.FlowState$Finished@24fb4f5f
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
[WARN ] 2022-07-21T11:13:51,932Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [96c9b024-3979-4d8b-abea-673c55400b16] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=96c9b024-3979-4d8b-abea-673c55400b16, invocation_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, invocation_timestamp=2022-07-21T11:13:51.899Z, origin=Only For Testing, session_id=d6e9caa4-e985-40c6-a7ab-71c6d9e2b079, session_timestamp=2022-07-21T11:13:51.899Z, thread-id=1715}
net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException: State of class com.bootcamp.states.TokenState does not have a specified owning contract.
Add the @BelongsToContract annotation to this class to ensure that it can only be bundled in a TransactionState
with the correct contract., transaction: 5EA7E401B32C5C39BF816C64229B3CC9CD0B3C9B8C142DAB7D27A8B39B641B6A
	at net.corda.core.internal.Verifier.validateStateAgainstContract(TransactionVerifierServiceInternal.kt:266) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.validateStatesAgainstContract(TransactionVerifierServiceInternal.kt:260) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:239) ~[corda-core-4.8.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:675) ~[corda-core-4.8.5.jar:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:70) ~[main/:?]
	at com.bootcamp.flows.TokenIssueFlow$TokenIssueFlowInitiator.call(TokenIssueFlow.java:18) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1105) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:801) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:102) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:93) ~[quasar-core-0.7.13_r3.jar:0.7.13_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_332]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_332]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_332]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.5.jar:?]
[INFO ] 2022-07-21T11:13:51,935Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-21) {}
[INFO ] 2022-07-21T11:13:51,939Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:51,939Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,940Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-22) {}
[INFO ] 2022-07-21T11:13:51,943Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:51,943Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,944Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-23) {}
[INFO ] 2022-07-21T11:13:51,947Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:51,947Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2022-07-21T11:13:51,948Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-24) {}
[INFO ] 2022-07-21T11:13:51,951Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2022-07-21T11:13:51,951Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
